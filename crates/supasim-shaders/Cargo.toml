# BEGIN LICENSE
#   SupaSim, a GPGPU and simulation toolkit.
#   Copyright (C) 2025 SupaMaggie70 (Magnus Larsson)
#
#
#   SupaSim is free software; you can redistribute it and/or
#   modify it under the terms of the GNU General Public License
#   as published by the Free Software Foundation; either version 3
#   of the License, or (at your option) any later version.
#
#   SupaSim is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
# END LICENSE
[package]
name = "supasim-shaders"
version.workspace = true
authors.workspace = true
repository.workspace = true
edition.workspace = true
rust-version.workspace = true
keywords.workspace = true
license.workspace = true

[features]
#default = ["msl-out", "wgsl-out"]
msl-stable-out = ["spirv-cross"]
wgsl-out = ["naga"]
dxil-out = ["hassle-rs"]
opt-valid = ["spirv-tools-sys", "spirv-cross"]
spirv-cross = ["spirv-cross-sys"]

[dependencies]
naga = { version = "25.0", features = ["spv-in", "wgsl-out"], optional = true }
anyhow.workspace = true
slang = { git = "https://github.com/supasim/slang-rs.git" }
rand.workspace = true
tempfile.workspace = true
serde.workspace = true
spirv-cross-sys = { git = "https://github.com/supasim/spirv-cross-sys.git", optional = true }
#spirv_cross = { version = "0.23", features = [
#    "msl",
#    "hlsl",
#    "glsl",
#], optional = true } # git = "https://github.com/supasim/spirv_cross.git"
bytemuck.workspace = true
spirv-tools-sys = { git = "https://github.com/supasim/spirv-tools.git", optional = true }
libc = "0.2"
hassle-rs = { version = "0.11", git = "https://github.com/Traverse-Research/hassle-rs.git", rev = "be9a1c5a929c1950ba28b3f75163b69e574a46e9", optional = true }

types.workspace = true

[[example]]
name = "simple-shaders"
path = "examples/simple-shaders.rs"
required-features = ["msl-stable-out", "wgsl-out", "dxil-out", "opt-valid"]
# Run command: cargo run --example simple-shaders --features="msl-stable-out wgsl-out dxil-out opt-valid"
